server:
  error:
    include-message: always
    include-binding-errors: always
  shutdown: graceful
  forward-headers-strategy: framework
  tomcat:
    connection-timeout: 10s
    keep-alive-timeout: 20s
    threads:
      max: 50
      min-spare: 5

spring:
  threads:
    virtual:
      enabled: true
  application:
    name: order-service
  lifecycle:
    timeout-per-shutdown-phase: 15s

  datasource:
    username: ${app.postgres.user}
    password: ${app.postgres.password}
    url: jdbc:postgresql://${app.postgres.host}:${app.postgres.port}/${app.postgres.database}

  flyway:
    enabled: true
    locations: classpath:db/migration


app:
  postgres:
    host: stock-postgres
    port: 5432
    database: orderdb
    user: orderdbuser
    password: dbpass

  kafka:
    brokers: "order-kafka1:29092,order-kafka2:29093"

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
    console: "%d{yyyy-MM-dd HH:mm:ss} ${LOG_LEVEL_PATTERN:-%5p} %m%n"
  level:
    net.greeta.order: DEBUG
    org.springframework.cloud.kubernetes: TRACE
    org.springframework.security: DEBUG

quarkus:
  kafka-streams:
    application-id: pizza-shop
    topics: products, orders
  http:
    cors:
      origins: http://localhost:3000
      headers: accept, authorization, content-type, x-requested-with
      methods: GET, OPTIONS

# Streams options
kafka-streams:
  cache:
    max.bytes.buffering: 10240
  commit.interval.ms: 1000
  metadata.max.age.ms: 500
  auto.offset.reset: earliest
  metrics.recording.level: DEBUG
  consumer:
    heartbeat.interval.ms: 200

# Use sub-folder of embedded broker, so it gets cleaned by KafkaResource between re-runs
# This does not work for native tests, manually clean-up /tmp/kafka-streams/temperature-aggregator
  test.kafka-streams:
     state.dir: target/data/kafka-data/stores